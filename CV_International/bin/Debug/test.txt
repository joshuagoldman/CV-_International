let html (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "html"

let head (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "head"

let meta (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "meta"

let title (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "title"

let link (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "link"

let script (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "script"

let body (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "body"

let div (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "div"

let img (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "img"

let p (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "p"

let ul (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "ul"

let li (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "li"

let i (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "i"

let br (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "br"

let span (props: seq<IProp>) : IHtml =
    HtmlFunctions.stringValue props "span"

let lang (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "lang=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp

let charset (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "charset=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp

let text (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "text=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp

let rel (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "rel=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp

let href (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "href=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp

let src (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "src=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp

let className (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "className=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp

let alt (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "alt=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp

let style (className: string) : IProp =
        let htmlProp = 
            String.Format(
                "style=\"{0}\"",
                className
            )
        new PropConv((htmlProp,Is_Not_Children)) :> IProp